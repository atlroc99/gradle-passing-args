plugins {
    id 'groovy'
    id 'java'
}

// apply plugin: "java" -> older / legacy way of doing it. use plugins {...} closure : https://stackoverflow.com/questions/32352816/what-the-difference-in-applying-gradle-plugin

group 'com.pass.args'
version 'V.1.0'

repositories {
    mavenCentral()
}

dependencies {
    compile 'org.codehaus.groovy:groovy-all:2.3.11'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
}

test {
    useJUnitPlatform()
}

// ext:  https://docs.gradle.org/current/dsl/org.gradle.api.plugins.ExtraPropertiesExtension.html

ext.javaMainClass = 'com.pass.args.MainClass'
if (project.hasProperty('source') && project.hasProperty('destination')) {
    def properties = project.getProperties();
    println('source path: ' + properties.get('source'))
    println('destination path: ' + properties.get('destination'))

    ext.cmdargs = project.getProperty('source')
    ext.cmdargs = project.getProperty("destination")
} else {
    ext.cmdargs = ""
}

task runTaskWithJavaExec(type: JavaExec) {
    group('execution')
    description('Running task with javaExec and pass args from teh commadn line')
    classpath = sourceSets.main.runtimeClasspath
    main = javaMainClass
    args(cmdargs)
}


//setting system properties with the -D flag
//setting project properties with the -P flag













