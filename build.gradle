plugins {
    id 'groovy'
    id 'java'
    id 'application'
}

// apply plugin: "java" -> older / legacy way of doing it. use plugins {...} closure : https://stackoverflow.com/questions/32352816/what-the-difference-in-applying-gradle-plugin

group 'com.pass.args'
version 'V.1.0'

repositories {
    mavenCentral()
}

dependencies {
    compile 'org.codehaus.groovy:groovy-all:2.3.11'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
}

test {
    useJUnitPlatform()
}

// calling the main method from gradle
// we use the application plugin -> it has ready-to-use tasks that helps us package and distribute our application.
// application plugin has task called run which executes the main() method

//ext:  https://docs.gradle.org/current/dsl/org.gradle.api.plugins.ExtraPropertiesExtension.html
ext {
    javaMainClass = 'com.pass.args.MainClass'
}

application {
    mainClassName = javaMainClass
}











